<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Covid19_Visualizations' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.0hyjg940pkq7tu1a4boaa0k36idy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.0vg3ns9038tz4c16yfcwu0vgahxi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Cursos/Proyectos Ciencias de Datos/Covid19/dataset/Tableau/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0vg3ns9038tz4c16yfcwu0vgahxi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0vg3ns9038tz4c16yfcwu0vgahxi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RAR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D3EC43A41029476BAB3283259FF56D3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D3EC43A41029476BAB3283259FF56D3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D3EC43A41029476BAB3283259FF56D3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D3EC43A41029476BAB3283259FF56D3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D3EC43A41029476BAB3283259FF56D3A]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='D:/Cursos/Proyectos Ciencias de Datos/Covid19/Sheet1 (Tableau Table 3).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/13/2023 09:52:13 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Sheet1 (Tableau Table 3)' increment-value='%null%' refresh-type='create' rows-inserted='219' timestamp-start='2023-02-13 09:52:13.436' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LES_RAR_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[HighestInfectionCount]' included-values='in-range'>
          <min>0</min>
          <max>151399480</max>
        </filter>
        <filter class='categorical' column='[Location]'>
          <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='level-members' level='[Location]' />
            <groupfilter function='member' level='[Location]' member='%null%' />
          </groupfilter>
        </filter>
        <filter class='quantitative' column='[PercentPopulationInfected]' included-values='in-range'>
          <min>0.0</min>
          <max>17.125477253607698</max>
        </filter>
        <filter class='quantitative' column='[Population]' included-values='in-range'>
          <min>0</min>
          <max>7794798729</max>
        </filter>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D3EC43A41029476BAB3283259FF56D3A'>
            <properties context=''>
              <relation connection='excel-direct.0vg3ns9038tz4c16yfcwu0vgahxi' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.0jqe34q0dc4ssj1gyeddp0ueydk2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.08e45sn1h4w1b01bpozi80igpa75'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Cursos/Proyectos Ciencias de Datos/Covid19/dataset/Tableau/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.08e45sn1h4w1b01bpozi80igpa75' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.08e45sn1h4w1b01bpozi80igpa75' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F6980A7E8D6F4B2EB86613CFF75A7C9F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F6980A7E8D6F4B2EB86613CFF75A7C9F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F6980A7E8D6F4B2EB86613CFF75A7C9F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F6980A7E8D6F4B2EB86613CFF75A7C9F]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='D:/Cursos/Proyectos Ciencias de Datos/Covid19/Sheet1 (Tableau Table 1).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/13/2023 09:50:44 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Sheet1 (Tableau Table 1)' increment-value='%null%' refresh-type='create' rows-inserted='1' timestamp-start='2023-02-13 09:50:43.886' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[DeathPercentage]' included-values='in-range'>
          <min>2.11204149810363</min>
          <max>2.11204149810363</max>
        </filter>
        <filter class='quantitative' column='[total_cases]' included-values='in-range'>
          <min>150574977</min>
          <max>150574977</max>
        </filter>
        <filter class='quantitative' column='[total_deaths]' included-values='in-range'>
          <min>3180206</min>
          <max>3180206</max>
        </filter>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F6980A7E8D6F4B2EB86613CFF75A7C9F'>
            <properties context=''>
              <relation connection='excel-direct.08e45sn1h4w1b01bpozi80igpa75' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.1hly60o1hawdla10k7qd90ube904' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.0jsh7m31wxl1bc13q2zty0b3e0m1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Cursos/Proyectos Ciencias de Datos/Covid19/dataset/Tableau/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0jsh7m31wxl1bc13q2zty0b3e0m1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0jsh7m31wxl1bc13q2zty0b3e0m1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RAR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FCB4597CD1EE45458928480F0A4FC212]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FCB4597CD1EE45458928480F0A4FC212]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_FCB4597CD1EE45458928480F0A4FC212]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='D:/Cursos/Proyectos Ciencias de Datos/Covid19/Sheet1 (Tableau Table 2).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/13/2023 09:51:45 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Sheet1 (Tableau Table 2)' increment-value='%null%' refresh-type='create' rows-inserted='6' timestamp-start='2023-02-13 09:51:44.615' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LES_RAR_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[TotalDeathCount]' included-values='in-range'>
          <min>910</min>
          <max>576232</max>
        </filter>
        <filter class='categorical' column='[continent]'>
          <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='level-members' level='[continent]' />
            <groupfilter function='member' level='[continent]' member='%null%' />
          </groupfilter>
        </filter>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_FCB4597CD1EE45458928480F0A4FC212'>
            <properties context=''>
              <relation connection='excel-direct.0jsh7m31wxl1bc13q2zty0b3e0m1' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.1qto7y91nsnqkx1eowstc1u9y3p1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.16rbobf1yezze813e3z590hgwnd6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Cursos/Proyectos Ciencias de Datos/Covid19/dataset/Tableau/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.16rbobf1yezze813e3z590hgwnd6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.16rbobf1yezze813e3z590hgwnd6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RAR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F94B0F489BAC47DAB83EEC3849318FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F94B0F489BAC47DAB83EEC3849318FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RAR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F94B0F489BAC47DAB83EEC3849318FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F94B0F489BAC47DAB83EEC3849318FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F94B0F489BAC47DAB83EEC3849318FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F94B0F489BAC47DAB83EEC3849318FD3]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='D:/Cursos/Proyectos Ciencias de Datos/Covid19/Sheet1 (Tableau Table 4).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/13/2023 09:52:59 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Sheet1 (Tableau Table 4)' increment-value='%null%' refresh-type='create' rows-inserted='85171' timestamp-start='2023-02-13 09:52:58.661' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>307</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LES_RAR_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F94B0F489BAC47DAB83EEC3849318FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F94B0F489BAC47DAB83EEC3849318FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1206</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F94B0F489BAC47DAB83EEC3849318FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18618</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F94B0F489BAC47DAB83EEC3849318FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28901</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F94B0F489BAC47DAB83EEC3849318FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[HighestInfectionCount]' included-values='in-range'>
          <min>0</min>
          <max>151399480</max>
        </filter>
        <filter class='categorical' column='[Location]'>
          <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='level-members' level='[Location]' />
            <groupfilter function='member' level='[Location]' member='%null%' />
          </groupfilter>
        </filter>
        <filter class='quantitative' column='[PercentPopulationInfected]' included-values='in-range'>
          <min>0.0</min>
          <max>17.125477253607698</max>
        </filter>
        <filter class='quantitative' column='[Population]' included-values='in-range'>
          <min>0</min>
          <max>7794798729</max>
        </filter>
        <filter class='quantitative' column='[none:date:qk]' included-values='in-range'>
          <min>#2020-01-01#</min>
          <max>#2021-04-30#</max>
        </filter>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F94B0F489BAC47DAB83EEC3849318FD3'>
            <properties context=''>
              <relation connection='excel-direct.16rbobf1yezze813e3z590hgwnd6' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.0jqe34q0dc4ssj1gyeddp0ueydk2' />
          </datasources>
          <datasource-dependencies datasource='federated.0jqe34q0dc4ssj1gyeddp0ueydk2'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='34' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[Multiple Values]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='width' field='[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[:Measure Names]' value='152' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[:Measure Names]' value='20' />
            <format attr='background-color' scope='cols' value='#03829f' />
            <format attr='background-color' data-class='subtotal' value='#000000' />
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='cols' value='8' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-weight' field='[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[:Measure Names]' value='bold' />
            <format attr='font-size' field='[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[:Measure Names]' value='11' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.8350828886032104' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{7DFB16D0-F06B-48C0-8C9D-A9B8BE048922}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.1hly60o1hawdla10k7qd90ube904' />
          </datasources>
          <datasource-dependencies datasource='federated.1hly60o1hawdla10k7qd90ube904'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1hly60o1hawdla10k7qd90ube904].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1hly60o1hawdla10k7qd90ube904].[sum:TotalDeathCount:qk]' value='24' />
            <encoding attr='space' class='0' field='[federated.1hly60o1hawdla10k7qd90ube904].[sum:TotalDeathCount:qk]' field-type='quantitative' major-origin='0' major-spacing='100000' range-type='uniform' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hly60o1hawdla10k7qd90ube904].[none:continent:nk]' value='98' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hly60o1hawdla10k7qd90ube904].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3843094110488892' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hly60o1hawdla10k7qd90ube904].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1hly60o1hawdla10k7qd90ube904].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{0EF17AD2-87F8-4EFF-B772-731EDCDD0DCE}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.0hyjg940pkq7tu1a4boaa0k36idy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0hyjg940pkq7tu1a4boaa0k36idy'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0hyjg940pkq7tu1a4boaa0k36idy].[Longitude (generated)]' field-type='quantitative' max='37886149.271293834' min='10861169.042724047' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0hyjg940pkq7tu1a4boaa0k36idy].[Latitude (generated)]' field-type='quantitative' max='9340084.848316431' min='-3550936.9829121772' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0hyjg940pkq7tu1a4boaa0k36idy].[sum:PercentPopulationInfected:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0hyjg940pkq7tu1a4boaa0k36idy].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected Per Country'>
              <formatted-text>
                <run>Percent Population Infected Per Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0hyjg940pkq7tu1a4boaa0k36idy].[none:Location:nk]' />
              <color column='[federated.0hyjg940pkq7tu1a4boaa0k36idy].[sum:PercentPopulationInfected:qk]' />
              <lod column='[federated.0hyjg940pkq7tu1a4boaa0k36idy].[none:Location:nk]' />
              <geometry column='[federated.0hyjg940pkq7tu1a4boaa0k36idy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hyjg940pkq7tu1a4boaa0k36idy].[Latitude (generated)]</rows>
        <cols>[federated.0hyjg940pkq7tu1a4boaa0k36idy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F96D09D1-5B5B-4CFB-AAA1-5116B114B4A5}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.1qto7y91nsnqkx1eowstc1u9y3p1' />
          </datasources>
          <datasource-dependencies datasource='federated.1qto7y91nsnqkx1eowstc1u9y3p1'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[tmn:date:qk]' value='284' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[none:Location:nk]' />
              <text column='[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[none:Location:nk]' />
              <color column='[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[none:Forecast Indicator:nk]' />
              <text column='[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{6717E493-61C9-4595-B70B-EEE9B139D65A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49071' id='11' param='horz' type-v2='layout-flow' w='99034' x='483' y='929'>
            <zone h='49071' id='6' type-v2='layout-basic' w='99034' x='483' y='929'>
              <zone h='49071' id='9' name='Sheet 3' w='48058' x='40346' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='31998' id='13' name='Sheet 2' w='39863' x='483' y='18002'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17073' id='17' name='Sheet 1' w='39863' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='12' name='Sheet 3' pane-specification-id='1' param='[federated.0hyjg940pkq7tu1a4boaa0k36idy].[sum:PercentPopulationInfected:qk]' type-v2='color' w='11113' x='88404' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49071' id='15' name='Sheet 4' w='89042' x='483' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49071' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[none:Location:nk]&#10;[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[none:Forecast Indicator:nk]' type-v2='color' w='9992' x='89525' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='24' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='129' h='17073' id='17' is-fixed='true' name='Sheet 1' w='39863' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='9' is-fixed='true' name='Sheet 3' w='48058' x='40346' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49071' id='12' name='Sheet 3' pane-specification-id='1' param='[federated.0hyjg940pkq7tu1a4boaa0k36idy].[sum:PercentPopulationInfected:qk]' type-v2='color' w='11113' x='88404' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='248' h='31998' id='13' is-fixed='true' name='Sheet 2' w='39863' x='483' y='18002'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='15' is-fixed='true' name='Sheet 4' w='89042' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49071' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[none:Location:nk]&#10;[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[none:Forecast Indicator:nk]' type-v2='color' w='9992' x='89525' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D8EAD245-B403-4027-A2D9-08BBC416941C}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='36'>
            <card type='columns' />
          </strip>
          <strip size='36'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jqe34q0dc4ssj1gyeddp0ueydk2].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B47533BA-7052-476D-9BBC-D5F8CA744A63}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
          <strip size='37'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1hly60o1hawdla10k7qd90ube904].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hly60o1hawdla10k7qd90ube904].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{189FACE1-AFAF-4049-A5E9-5FB934C803BA}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='36'>
            <card type='columns' />
          </strip>
          <strip size='36'>
            <card type='rows' />
          </strip>
          <strip size='36'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0hyjg940pkq7tu1a4boaa0k36idy].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hyjg940pkq7tu1a4boaa0k36idy].[sum:PercentPopulationInfected:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{09E96D1C-1D66-4E97-87A7-1A22BD409B7C}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[none:Location:nk]&#10;[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[tmn:date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[none:Forecast Indicator:nk]</field>
            <field>[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[none:Location:nk]</field>
            <field>[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0684AA7-927C-425E-B2FB-18C54ACB7E6F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[none:Forecast Indicator:nk]</field>
              <field>[federated.1qto7y91nsnqkx1eowstc1u9y3p1].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{536692C5-9171-4006-B629-17D23DBA1468}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='58' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d5Qd133n+blV9XLu7tc5oSMyEQiAAJjFKAaRkixRlmVTTutw9uzsH7P7
      j89Zn/1jz5k5M97xzNqecTgjW7IlSqZEUxRFUowACSLn1Oic0+t+OVfV3T9eZ3Sju0GgG6Tw
      xXkAXlXdW7fq3d+9v/wT8XhcWiwW1gLf706RMeWa3OsuboBcBlQNmYzS1PdLimw6QYdBsRNA
      XHd5VodkTlLkBJDzromkBSdjJXhtkgmthFDtQaxGlqdSn1DiUkhkdDRVYLeo5HQTq6bckkfQ
      JZwdh2avic+uAJIPJnxYsgliGYMENr7RkJu5vi0MnwQeAEWd149msViw2Wy3ZFDLYSCfJWXc
      JYD1hJSSsuM/ochj4Wrz14mlvPy2doQiEzr6HWgYVHpMFCHRFEEiJzk57GB/dRLNhAIBKAgE
      QzHB1ZCFLSU9jCcDnK1+BBmO4TPSWM0hbBYbNmWqSQ5sFP69FbBKuM8nUYWAnCSa1jkzovGn
      1YM4Agp5XWLLqYBENyQXU/X0ui0IMZ/AtVsznLv4vMAR7iEvNO7TLtMb7qXImuX0hJfJfsGE
      4WajbYyxuGBnpQQhOT7sZFswiU2bXvkLkx8KxPTwhhwDCQtvVbyMJZvgW/pH9KU0bKW3d2oJ
      ASqCAnXBkTE7j3lH8ToK97VMLfThpM7hkIerG+6bGfdc3Jr96C4+NygePM4fVV6g1pOjLnae
      rg3P4HcKHq2OUWOP83CDTm3AZCwpSeclHbYm3hkKcnHMjpiZ/IVPlQ9SecEPXd8k7/TzZPoo
      LcUqj9aA26YuN5RbhnTOIBOLcW+pueCMpC2icKT2WfJLTPW7O8CvEWQmyeTQOKcyGvtrcjzA
      Ka4k9/Fu5W9TPHKKLdZTTKTgx301bPBl6LXvIxe7ypfLJ6jxTbOuAiklugmKgH81HiRVtZEd
      Q++xpzwPCNTrF9rbCIGmKDzSYEWIwtiSWZPX+224rApn/fsQ6tLT/C4B/BpBxMb5StUQ5S4T
      UCl35fnN0f+Pd3L3MlZ3HwPZe3jHYoV7QMQ62Jw6y9aqQYod8wVfIQTpvOSDAQ89uw5QEbrI
      C6UTaOr6MBQWTcE/JVwLIcibsNmb43Cmioy/8oZt7xLAFxzSNNAm+jFK6nDEBrgU9eLUYvgd
      EkUo1Pt1Srq7SIfKeCzxKxxWhaO5Zl4quoA3sBjXDP0RwWDSyrW6p8Hpo3xsECUAhilRlTVd
      /q/D5cEkV8IKPo+dSX9jQVi4Ae7KAF9wKOEhDnb9IzKbImCEaQ2k8NqmeWUFq6rwfN04dfEL
      jEYlmwIpnvdf5s3xWqQEZnh+MEwIpRR8dpPxvINE2SYAzpYc4D8NNtE1mV+PR5yBlHBmXFDv
      E7QrlWQC1cu2uUsAX3CYRdWcKHkCpGSiZAuGIYllCxO6sL6rOCzgVrKkvdUYUqHcmcedHef8
      iEZqzpxO6fDpkI3D40X0Vz4AFnvhhDtArGYHo7m1sSctBSHg3jJJFAcjnoYVtbnLAn3BIKWE
      fBYUFaEV9N6phvsAyFhr6e4twacNcWLQQnORjs8BAoVmyzidMTvHQj4eKg/zaG2SWFbBoQlC
      ScHHPSrlfpWsr4aLjV8Hh3uBTl0UdP7rDJtF5Z2iL4PdvSj7thB3CeALBm2si+cnf8SYKObj
      hpfBYpudqKrG+cpnORsL4Uxfo7fjMk+1mLisCo3FOnZ7np+F6tmdDeOygtMKSDjWp3A16WXA
      V81464sIq2PmflKaiESE8mgH20vnC8vrAdOUBWtvJgkO97LX3yWALxgMh5fOpJvdnl6yZ/+S
      003fxiya5YWNsgaaI6f4at157JqCIgQDEcG1sJ3j0VIMv4uPRooIEOe+GhMhQDdM6l0ZBqQF
      YRozfUk9x66hd9nvGSdQrGHT1k73vxgMCR1ZF+QyaLExjKqNy7a5Azatu7hZSGniHr1E+eCn
      BdYHwBvkbPnT9MRtPFkd4sH+HyCiY2w7+9eU9H0CQLe2gcGoipQKOUOQyAkuZ8v5Wt0wLxef
      QtEz+G0SVQFFCPbXS15sTfG49QJmMoY0DdTxXh4YeoPny0NU+yy47wD+p308ywfpWmQqvqLJ
      D3d3gM8tpGlSf+VVDogL2BST7yVbwV0EwObQIVyqgZSwr3iCY4lRShySB8y3eLM7Snf943x0
      9iLB7DXODKlE8iplHkmNR+fisMKTDSlyusL0+ljqFnRNwEk2IorKqes7zDeLevAXqQihMldT
      tJ5I6Aqy+V4UZeXT+i4BfA4hpQQ9R39wL6/EGyCTQDp9M1Owu+4Jrg12cSSW4cvqURq4yDHb
      Xpr116jOddKVuJehhsd5f0xwHjfWIg/l+jA/ueKh1J5FIFEW6M+HMzbCxY0IoVAtIhS51saB
      cjXoMwOIVUx+uEsAn0uo4UEaet/BazPZpnbxntxB/7SDmqGTDdQifdWYPR9zLNOK34ySKavl
      XGcRXbY6hNWO4QhyLvA7AOTyGaIDJ0h4t7A/+1PaxhWCLrBNzY6f9RYz4WsmXroJAZxz30Pd
      6MfUeSQ+5/qqPqdhmpKRwVGsyUNk63eBnkd4Asu2U//sz/7szzVtbejgw7Es+bve0J8JIjyM
      6S8naivlQPJDGnxZzhlNxEsKPK+v7V3yVjfS7kZNhRktvofBivuQDi9j0s8T6bdpGD9Gu+ce
      XOFuLJkIIp/lD/UfEo2kiMdS5HRwWEx89oJrwXma6dr4dYSlsOrnbF4uKrWooX5SsRgnYx7s
      Mjvll78+yOkSIU2cyQmGTTdStSCcnmXb3d0BPiewjbXTEDlJSbSDUxXPk6zazjv5r3EiN85A
      zb6Z69L+WjYMvE/H5pdIVe8EZrnzXFkzP859A9XhQrr8OEbPsyHXzomW7/J2Ty0Hvb0cT3vZ
      Whzj4riVi5MaVqeDrrr98wcTGsAc7+dDWwPliV42+MGuru/KZrMo7K218eNeF6oCFN/YB2ga
      dwngcwCRjvNs9Kds9U7SKe0c9lYjQ4NEi1uJWbYDIPNZhMVGrqyFnnQKjDxo1pk+ZC6Dveck
      JflRhvwHkAhCpdsIWfawpfc1Wm2jVLklL3oigMRvzxLP5vk4VkJ+QRCTCNZQk+rhq94LaCUQ
      9Fq5E6aSYcIjRVE2JM7xs3wLwmJdts36664WgYyOY4YG1nsYdwSkabCx53U2uSb4uEfFqeSQ
      yQiu3uOz4X3Rcaqu/QKkRCgKRrAOYejITBLl/K8w209CJknJxCVe9p/gO6N/hTLcjhYdpfT4
      96kLnWJTIINuChJZhd5JwUgMKj2Sh/0DbJ88NH9QQjAY3M5rIwE6Jk10Y/0NYKcGsvygy8V/
      FU/xUdgP2spkk/Un28XgKboudO3XEdIwqOt8g2fdFxiIqnQqGzit19AYP0u4rJqUlEhpsmP4
      F5QpIQZNA6Fq+EYv4JjoIlbUTHn8Es3ZMcaSFZysfYpPx36CVyb4lv4/iWcE72cq+NSso7s/
      Q5GaojvhxHQHyNn8ZCPnGcz7uVD96PVjc/npd23gAW0SRQjyhkkyYxDPmpR5Lbcs9nelaCpS
      eLvDguH0M5nTVjx/1oUARGSEmr736Gt+Hq3vAvnmfYg5wcpCWV+L4p0CGRpgU+wUp8MWLuZr
      GK/chZs0jeMfUStOc7HtJMda/4AO13YaIj9FCfWhaSpJdxVVPe+SiqewaAkqinS8YoLTwRre
      TT6BKKli79gvcGU7Ed4Swru/RljVEEa+oGK12CCX5hf9pWStVsxA9aLru1mzmZMD47Rd6KDH
      Uk3aUUQ6UIstFGF/9hwPV0ssaxQj4HVovFw7wWvtb9PtCK54Yq+pFuiD/jD5wXb2hd7gxeIr
      jPSP8Yw4hiPchZmIEPPVA9xd/adhd9Ju30hX3IEsqaYhcQlSEXzZce6pMClTI1wZMcm6gtxr
      XEDpOcs+/SQXK55kciJJfb6LAxVJLCpEDQdXaEDYnQhDZ9JRzT79DKVqgg7nZrC7QFFxjLVR
      EzpFxcQ5hou2gZ4Df9miv4kQCiFvPUO+FlIVm8kX1yAdHnRPkC5nE4NtHWwK6GsSKKObEpdV
      IZ/L01HzEGKFLNDaqkH7wzDaxT36BarceTY7Q/jtgnJrmC2ynWPhMlz9p7DlE2RdQYRyR4oo
      awahqAinF1HZBEIl7KimduQIG0t0BiKSKp+kND9CSaoXqzA4UJVmJO+lW9RglDWRtfs53q+y
      LxCibUwwOBjmKeMQmpAkFSdPOS/h1vJYBy6wIXQM2+Alvm07zD5HL5ttY5SNn6E9sA/TVbT0
      GIVAzHW4mz6uWZgINNIYvUSx8/bv6IYpOdoepdiW53y2pKCy1e4wIVg4veSb95O1+TElmFIw
      mVbIZOFoog6zdAObLQP8ZuYVvnTxP2AZvLyWw7ujoQeqyHtLiZZs5FrMyUfJRv5nRw1dYZX7
      AmPYFYOxlMoFpYWSeAc2M0W88UFsGzYRyjsYdTfjq65mZzDNXv0M5NKYEoqc8GhNkofLwrxU
      1YPHLjFlId43aDcQ+fTND9pioyPjKnho3mZYVEFLpZNXRsppDp1AG7q6onZrLAMIhGbhg7Jv
      ke37Pmdte4j5G3BmQqRatiMsVk60/B7hvrcwHXlERePaDu8OQ8HBTRYCV4RAODz0bvwqvbkM
      NQMf8pR5CKsq+fvUYwxX7EUaOrgDhViAqRU5Xb+HV3LbkfkMZFO82dNGlRYmGaznraseHqyM
      c6Tfwpeb8yRzhaiqK+Mqe6oNuqJW8gHvTY9fCMFHJY9ROf5z7im7vbuAEAJNgFumaK96qKBI
      WUm7TCYj1yox1p+fj5A0mIneJ5NE2BzXZeu6C1BGO9gUPU693ku3vYVL5Y8XAl28JQjAFbpG
      XeQcXf6dZILNN+xL6nmYHAZ/GTIxiXAXISxWpGmijPdiIY871k/UdGCxWch6K3AnR0i6qzCL
      VmZQWvrmks09b/Odushn62cZmKZEN3WOdcZ5y/MoZvUd6A0q81nM/g7U+q0IISjtO8Soox5R
      3XqXCBbAlo3yrPMMdg12yaPUtZ2jzqvzy8kH6a1/gmSwlcvB1uvaTbtFT+8AMhVHjQziGGsn
      UfQU/vwE97X/gD5LHaPWKibddeRKGpgobYJcBt3mRAhBvLgGKeVn1u5LI09PKIWslbdFuTH9
      vKFEjtevZOipewyjomnF415TIfijCRPdFUAoaiF/i+LhtyJ/h56IM+5vvav9mYNsOkdz8jw+
      m44iBFUeHbcVmunncjJA2l0x731JPQfj/ezp/1dELkPcW4vMpdl2+m/YkTjGJrWXLqWeiv7D
      PBUcYpt9mBa9neO2PSimzoM9/8Tu8be5JmspGz9D7cjH2IavEkj2QyxE1lsJYvUio1BUckJj
      n9qHzXLrFrnpiZ/K6rzbkWZ7lZWWEoVPMtVIb3DF/ay5mmVWPSUR0TFOqLvwxnohnVjrodzR
      qMh0U+3KXJfOrz9hwzdygZLBY/OOi0ySsv6P8adHCSa7C8f0HGHTwfZyg5ilhExeUuuIo6oS
      IeCD/FZkoIIHBn7Io75erqpNlLa9yQv6OzzpvEhp5CrfdXzEn2r/Rlnf4Zt+FqWyiUsxx/IX
      rhLD4TRvnh0npTr5QZeH/zK5G6OkbnVju+WjWiGEUJAVTXR6dvJp0++C1QHyrqvoNMrj11DE
      7PvQTYX3hopI5Ax+q+wyFaMn2dz2Q7Txbnxnf4aIjPDNoosE1CSXPXuR6QRb2v6ZCXc9QkAi
      kcU9eB63SNEdUemK2Wj37YHwKLvsgyRz0J32UmkM4bSaeG0Si8PO+UkHh0JBikfP3vTvY0o4
      FnZOuUzcSijkrB6GOntJToRIFm8Aq31VPaybK4RIx6gYOMyTxkcoUcmo6adLa+JK6SOYNheK
      zblsUqMvKmQuQ6t1ZN7jH41WIGyCe4tDmBKaLGNs9w7wZnc/1a4Mp4cnCfmc1PpTGJoNrHY8
      Dgt/YDmM0wKP10ZIDAxxzbaJ2kwn79T9IcIdoLrnPTw2SdYAxaKxq1risYFpwkTWyhHnAzyl
      fEyjJ8d4zyHG6h9cNasqpEQN9SJavcCtYYOEEHgcGpuLslyx12I30/TexHxZPwJIhtmb+ZTa
      oA5ANRNsN8M8HDpJOg8fWw/SvuF5xE3wnZ93iJFOquyz+vfOmJMPPY/zteSrQEFHf09pFpA8
      XTOBKgQpOclYzkGLN4UnNUw0WMfRupcY6/sVv2keRxUKwullMOMmqbYiPEUgJW4jiqKAXQE5
      2EFfsaDSI9BNAckom2M/Z8ImeLwZbNH3+Gm4cV6Q/UoggapiG4oo8O6fVdaTUjIczlARsLOj
      zot90uS10epVr/6whiyQlBKRimAfvowy1IaSTSIWCN9ZU6HYaVDjM1AG2xDJ2G0Yh4k61olI
      TNzyvm8VZFUr/+D4HcbTNkxTYcgoAkVDz0lSOUE0DYVpJWfYpCZXDJfII4AdmTMFIdHhoavx
      WY7HK3ijx0+HYzM75BWsqRBMZ3cQ00myYGupjs1hRwBWDX5jc4avbDXYUmbgsBikMzrW079A
      ufoJ5FKreqYyj4VD7XHeuhRDNxZmcV49EhmDE51R4mmd1iJJpZoobFurxJppgTLRESrO/kce
      V4+xNX2aveYZSuw5rHN2RKtSSMMhBGwOJHGPXqTTtglpcyFNE6LjTBvTbgZSSmr6PuDBoR+x
      I3+OS/YdN7VqSCkpufQ2eiaN4Sm55buUUBRyriCx0TEu0cTp0icxSmrpmTTJjAxR5jJxWadd
      kAUCgdNiUOHMIhD0ZLz0lNxbWGkVlT69iOHK/ai5OA/JU+wvGudUopy8t5xsJkdkbBK3yLDN
      H0NVJG5rgTg0tZBnv1AZBqIZwfBwlEedbUQmYiTLtqyYTe3XPbSFTHKJOFuCymfWCFktCjZN
      4d96LVR5DPxGjLasH8NdvKp+1owFsik6de4kAEH38sKQosBO/wQTfT8ibfNTn+ukypEknlU4
      bt/PtbrnVm87kCb5dIYzwWcYsVeCc3VWTilN3FcPUxnp4NGRtzitlxPpaiGBlaH7v4tQpwjz
      Jrd4qecLVtwpH6i25t8oeMYKAVJSb42wpyKDKqAr6qDKlZ0qXAEFi3GhXbNlhEPD7cjKVszY
      BPmyZhAC18QVKtw6FhWK4/0k5XbinhoCIxMkcwblLpNyZ26mv3kQsKkUWoOSjzoF1uglNPNN
      ZPNeDM+N1Y5CCDK+Kkq9vUx6t/PJUBtPN322GIIPL0dx28Dw1fJpJMl2SwaHnlp1AZo12wFk
      Nka+/8NVtVEENDkjbLSNUO7M4rJIAg6TFqWPc8kycp6Kxe8lJZjGdc50QigkS1qI+esx3cWr
      mqgyMkbl+dfZdvWnPJg7j0WY1KoxWrI91KT6SA72UtT5MSXhTibtQaSigmopRGYJ5YZ8r5QS
      0nFkPIyz9yR6sAGZTRccuqZZFCEIeTZwbNTN+UwFbZYWTo/YKZdj+B3TW3/hWo8lT03kHANp
      J8mUjvAWIxQFS7iPe9V2NAW0+BiXtY0IX5BExsQIDWMXJm6rSSwDhizk+T/c6wAh8NsLvLsi
      oNQDvRMmTxb3MTIwTqJ0U+FZb4RMkg2Dh3mqNMxEwqDOp9y0l+jARIahSJZrk5K83UevYwNX
      IlZSgTqkY3WL2p0ZELMMpISssM1MdAwdYbUjDYPatp/SH9jBtuFfontKGdUqscg8cU81qUUs
      pyu6XybJg4f/A7uMToQD5q9cEp+a45n00cLXIQj3/5KktNDp34wvOcrl5mcZ2/T4gmcwCw+i
      56noeR914AppbwUP2S7zWnovxkc/Qj34VURkFLOiCaFZkRKe1j/g3pIkmgJpO9gtc/newv+F
      gGqvwa6hN/jA9xyGqqL0XyJr8ZLWBTZNkjBtyGQUpbiSkQ2PMmSp5sREHxtCVxHoZLMGOc1B
      0JHjaLSW37OcJOgs7ApOCzzeInn7msJWfxe5zg+Z3PT0Dd9hSaSd5zZZ+Vm7QiKWIl2j3TQb
      VF1sxzAlB2wqQW+U/smT/MRSTyKwereNzyUBWFXJi5P/xIX+Ura7x9A1J71UYJVZhlMWZKmd
      WnuM3Z6eGdV1Iq1wpK2Fi8HHSBatLHPwNJzDV9mmd88xhN6YhQuoWQJkqU6cACSb2/47Rwfe
      xVZWxrHG72I4fFhO/ZySRBd1foP9gWEmK1SqfYMoQHvnKyiOQfK9r/O1oksc7d7AIe/jZION
      XPTupyLxEW6LQbFDn0eL4YxCQrdQ485yqNvCSetu8v4KRD7Lg4M/pNco5b+wl322DnYWxai5
      9nP6hYJavgG1phXVbuX51LsMReAVsRdZ0ciIxQ7RUV4fqeZbtX04NAlCEHAKtpWbHOpW0W3p
      Qo7QG8hCYd8GPuo5j8PjY0wpwmW/ed8gIQT1pQXBJJs3eT9ezkTTAzfFet7RLNBSEAKK7Aat
      vhhBl0HQnqHZHqLBHiaoxenMlVFMhDpbeEaotqmSJnuIluQZzo/ZMfxVBUHjRvcZ78fdf46D
      Xa9Srk+s4v0WislNC6kKEtPn5EB1kmD4Cn3jOXbFDvFiU5gWbwKbJvE7TJSpsbbax2ktybLZ
      OYaiQI01wq78GfTxQQZkKZfzFRy13Mt+9SKqUjA0tSd8/DK/h7PxIPGkTsCWJ4aLmHTi6fqU
      J4ID1DjinHEfwBPtZm9pjHJ7hmvdEXYYFxgMbMdEoXToONvL89gyYTobnkMbaUfWbiGbSJIN
      R2jwpRGiwL87LYIjvSqpmp3I4uobs3lWJ/2eFoaLt1IS62abJ4n1JnKJyjnGuFTO4Ht9xXQ1
      PH7TvmSfyx0ACnN3selb4czx3ezPcC0haBfZ8jwZeo3Brg5O1r5U8EZdBFJKmi68yjOxDwsT
      f1WLy/TFkrm7hRCw2TXORvkm46rAskQqkevoUoDTYvK05RJPyctkbYK/H9rOLzwbiSdyxIqa
      yZqCnbHD1LrTfD//JGzaDxNDCE8R8cpmfnI2Qrk9g9JUSSZbA4xT6jKpssTYqUxwfLwPf6Kf
      lkCevKEwbAZA1dADVQibi3TFFk52ZbD1neOh2jSKMHFaVXZUmHww1IelcQ8sEwcsFZWWnndo
      sI7jtK5u6hmmSftQksYKF/0TGdr0Es5ojcSaNn2mwKnPLQHcCF7bjVkUVZE87b5Acc8k71X+
      9pJajJ6tL3DtZBctub5V7q6zfLlETpHALDEoQlDmWanOeiERSY6Hy5go3kwoWAfJCLbBi6Qy
      OsN5lV2lOs/EDnG5N0539aOoqQh6LsceZw9pXaW0812+UnIBIcCqwgv145yPBrAoIWpHP8U9
      xR2Oe5oKQrinGKTJM5OvMKoKTsYr8IXD7CqKIITBY80Sd+853nhtCO2+ZwqevUtASUZwDF8i
      bFEwqsrQVlFNz5TwTrgEKUsZLtoE7kAhGm3FPSyOLyQBrASKgH3eQTwj/4NXLf8OaXPN28KF
      EOil9bz10P+N9YP/kw3G6Ir7lkvICHI6uGUZGWI57C0aozr5KplhK8VaCkcp/NMlP5srknjt
      cK89zk7zEP2DJ3CpeTK6SrDM4PKkleJ0CJ9dIlALO4tVstkb53A6xZ6SGAgJmDwkTvKjzMMI
      TwCZjOKVcfqKtpHY9AQXxw6zi08AAQL21Ul89jEuXHuFS9p3EGX1i7JDxZEOdtQ6cNlVVGV1
      7+DQqJ2hLc8gNOstTcDya0sAUGBJaq1hPKdfo7U4zSXfAdLlW+ZdI11+3tv0XRrOvsJDave8
      EqBzJ/pM8ejPOLkXQ8ZUkVLgUAtuI3ZN0uDLAtmZax6vDnNhWOWeKc2wqkC9e9qdotBuS1GK
      mnR6hgjFlJzitZl8J/cWZW6DdK7Agg3mvDBdXtTp5UcV/yvCW4QQKj59ct4zCwGbyyGrp7jw
      q++hbjkIu5647jmsCpQFHPid0+XjV4Z0TuekthWxghjf1WJdHW3kOnl/TiQVJpKFH8+uSZpE
      L096rvDtzA9xT1ybHV94lOrDf0dKapxp+Sqv6lvJycXXHzmH2VkKy23Ycs4fU0LS0JjI24jp
      FnJSIaJb5zhkzr9XU4nJlnLjuj7nwqYVdPjTo5k7LrcVfjjczOFeK6/2VPBx/cszuUCFEIhA
      GVLRqB38kKdcl2ZGm8hK/vMRJ92Tgroi+N1dWYKTlwvhmQsQs/jQlIJAtdwvb0rJeCxLNm/w
      +pCXSHDpCC9p6HDlCDKfQ0qJzGWQ2TSBa+9B5MY797ruAOsVAHNY344r04fPMYlFhWfrJ8jq
      YDfTlI8cp93fiKPjKA9c/j6tYpSO8BmSip1mpR+rWH6i3wwW9pk1VZTpo0KQlQraDe6rKrCp
      bL5cIWZ7mPo+/31LafLpgI3WEgO/zWRc93A1Xota3YJ0+Rcl1+pUBzZfYcQAI3GFTOUWXkkp
      PJU+znhSMl5936LFqbMWN6ZJgf26wdqrG5LxWI7jvWlCZdtor7sPoS6u5ZFSIi5/wt74J/R2
      RshFJqkXYwQ9gu3Faf5lMMqg74UlVbR3LAt0K7wGl4JXyfCR+0k+MVWeSP6CzZ4wsazCvyTu
      J9r6JRACZ3wEq55Cs0o2yiEwuFWevAsw7c8jkXOEZ4dqkDcFBW7dxKYY2BVj1aruxXedgv+Q
      FLAxaPD+SAkWi0K9bRJHwMpgRdO8+gDq5CA1oePkhBVbNoyU0yp3QaUXSiLjDG19iTNHrzDm
      3AD12xYdS76olg+GgzypjeOwWBfV2xum5I1uwVHfw6jNHsxlg9slUlE579xF3dApXtwusKsF
      1k4oCt8qaeOvRq6Sqdi8aOs7lgBuNS6PWRjOOLG63cR2voj0BpFS8uFAGmviXXpiNqJbn5wp
      ADex8wX6w21UJE6TR2HcXkHGgO1G7y0akZj5V0yxBIWVsaD1kUgUAR41hy4FrnmTf6kpMV/A
      LhDUXJXs9P1AUmCXAnaTF+uGeTWxm/LcAM/V93I5Msnr2rfJT9XZ3T36Jk/42umcKMgHc714
      nFZ4qriXH51/k+7dvwd6HsXuWnx4qsppNmC71MbWGh+1Jddf1z2W4qh2L6KsjmjB8yoAACAA
      SURBVJXoyYRQMAPlWLs+5qmN4LAoCNSpd2oynoas07lk+zuWAG716t9cnGc06uX9yt9ETMWM
      CiEI1RzkR9FGlOyVeYmUhKpy7oF/x8XISGFK2pzsOvG3yHTPTY5ALvg2Fbw+pRuaSwiz6lKJ
      TRjM5uy4mXeykG2aYuGmZJm+qMaE6eFK1aM09v8NAokjH2Vfzz/zsXgZ/GVctm1hNOJnwNNM
      bqSP3+QorcV5hCg8RV0AvmZc4B97K1B3PHLD0eTtXiJZKPdfL9BKKQmndKTLs6onVSqbiAKD
      sR9T5JpaQCScj3l5134QM1i3ZH93LAHcalhUeMDfz5VYJyF/2bxzpq8c01eOevod7DYLyQ33
      IpwehN2JWV5QjMuucyjLOG/NaIKmJdVF3vpCXn92Xb6xXmRlGu+V9lYQMo/2aZwoe5ZI1b1o
      I9cYMktwJwU/DnyThtAxaoc/ptfzAnHTTty/E1HZhFp3D6+eMHnR/JRNQZN3ej1scKao8ErE
      sU+R2x+6sWGquIrqukos2vXjk1KiahaUJYyTN4KiabzpeZbo2MeUqXGOKPfQVX5w2XrBa5sW
      Zervz26+mNOnBN0sTPDloCmwO3WEt+T+RXcYs3UfSs9JrENt5Bp3F5ItXTtGY/d77E1fIkDy
      BouwwJTX19aae77wt1hEiJZz2Irr2899X1IW3qMydciUkJMKVmFOHVvZu03lBdLmJFJ5b6Fk
      Us02zvjKOJvPoOppuksPkA82gBBYnQ5ypXUFwjZ08ruf5fipMYoSnWwJpPh+/wa2pKO4WjaR
      WmbnFkLwgdjOpvgpgp75HqTxdJ4Pc3XIQPmqZ4gsrSclJe+YmwsOkpp1RVzEGqtBp0ngs2lR
      pJyNz76UKOIHw1tIZJd+WMOETyLVfC/1GJ1G2ZLX4fKR2PIl8k2FYBKZz7K5402eSh+nSCSm
      fGCuh6Dgrz/Loos58/B6P4rFFwA553Nj34uUoZE2VHQpiBoWDCmm+OXZ2IAbQUp4vSfIuxv+
      GGGzz4zZ9JWhu0vYPfBTNIuKyMSxhLopiV2juevfUPvOE7z0OiKfpWfT1/l727cZksV8rWqA
      S+WPkXSVr2jSpctbORu1Yy5Qg58bk4zVHbh59lcIhKotmqt03vPnMuTbTgKfMxYok4dj6QbG
      KKEue43tgSjnkhU0uSK4F3F/MCWcjJZxzH6QyeZZ1dxKX6+l/QQP5C7MaDwWJ9wp/l0UCjVn
      TQ2nos8yI1K5ocl+7o4gWV5DLkRBNogbFjAlPjWPTZmr/58r+C6Otkkb1za+hOIvvf6kzcmR
      Hf8eoVnQRtqxGUlKRIwXPefIGZ9iKRV81NbJR41/gFG7nTfNLVhCPRhDXShlG25435lnUFQ+
      EFvZGj1KhX+W3Qk4lLVJhDDlQg/rZAi7GRZISvgguZEPm/6Ey41fJ2bY+VnufjrqvkydOnbd
      9aaEN0bqeKvuTwjX37+oXvq6Gyzso7SOC0Y5aVOdGffCsQsKvGsXxfxrfgtDuoOPkkEG884p
      QdMssA5SLXwWvPL5RDVrCJuvzZn9kzUV0qaKJkwCam7B5J9tsdQuICWctu1GlNYuel6I2ZDT
      fFkTiYrthPEikVi1wvy8v2ScjQPvoPWdB0AvbURufXhVwSiyspnXI9X0TWToCaWRSLpksFCb
      4DZD2F1oGwqq2nXZAWZ9YlZ4vYTLiSJOVn8doShIKThS+iIWm4Vnx/6RCnee3qiVlGnhoraZ
      FtlNP+VcViqRVseyd5JSYnZfQNmwbTalYC6DTMW56mrBF4+jS2i1xee1m36GQdPDSddmnjOP
      cDYd4NOig1zITHIgf5V7LCEUNJJZ6JtUqC2SIMwlZIHlYVUMipWbDyqP5wSdgX0rYjOmc7hm
      9fnjtKjwku80702OcmjEAaV1oFowJ0dQF9tVFoOq0V26h7/R76E4dIXvaF1cMYJrZhwVjoIK
      9o5ggaYX3+nXbEq4HAtQrMSo9BhEMoLXPN9ATlVCF0Ig/KU8PvQPVFqi/H38UeKOKjLeCgiU
      czk6DjYnWGzLr/xT/akN2+cfS4Qp6zvG8L6XuHbJStIQtITfnmLvZ3+kpKnxYfVzeGIDnNXL
      udz8GJriJr/zO3wYDXF0ohfFyFPSc5TzF8Z54R4Dr0swOGHSXHFzRDCrQl2WtKefZubIZFrF
      LAusaPkxoxMIl5eYq4aMDg7L9N0LRJzJS5TyBlBUtPAgm8be4nxN64wLxXIQbj8AIYeH/3ol
      j15fu+YsyboTQDSr8hP5JONKEGs2ik01MQ2DcOU9iIGrPDDwLnF7KTI7DuUtQCF4/PG+v2O3
      b4h3w41MWMswanfMrB7Ct/LckEuiqILhgy8jhKDt/j/B1n6M4fCneM00MUPFIkyCWo6LWj1j
      zQ8x0X6Czl3fQgmUF17qlP9MLlAQuvtbDuDoPcunF3+MTUkTmtRxWC1UF8/R8KxCjTl9/VJO
      ePOJY35MgtDzK7K0C08ApGRn4gj2RZItODIhZGgAgrU4hi7wQHCcy1c/Qd/6yKpWcmFzYO54
      bE0n/3Tq+XUlgGRO8C/a1xirLGzJeSA5dU4AsnkPh4ydMJWxGAr+K439b7PHO8RERuO49xEM
      +/IFkW8Gc3/EjK+CH+/8P7AaWWQqzpPt/0SxDCMtduS1kxib9qN4l07JIYQgU7+Ti74Kyt79
      K2IYfHoxymN7bASc0888lxhWTgSrQbUnz7cG/hP/6vs2+YpNN7xWKAoyk0SV+UXPN/kzeMf+
      kaPjO3ne8jElTsmWgcOcyx+4qXQzawUpJbLrHDY9tX7eoIYJv8zsZrzqviVXC2GxIeyzfvoy
      HuaBS3/JN6wfoClgoFCS6UeU1Nx23lGU1kLdVnINu8kH6/CaKX7pPsBR3x687R8jljL/L4AM
      lDO45yUSOZPLKS+fXJOLptz8LE9zI9ZIVaDZn6IhcWH5sZoGCIWPW/6Iq7GFAq6kxm+wszjC
      y54PqPEWiGRbcRLH6X/7DKO/vZCmiYyMkb90lG19P18fAjBNwWupvVxq/MaK20gpqZg4zUNF
      /VinQgnLHDnUJXTzNz222OSiGqEZJMLsO/MPXPBt59rBP8Y51k5259Or0l4otRvxlJajur2M
      TJhMJJdvs1KsVLlQl7nGQ5f/gsbOn6GFBxe/yDCQ6QSYkkvZqjknZt+PIsA17dUgJA3FBvXZ
      dmQuy50IoSjIfA4CZaip6FoTgAAJJ2PlXKx9YUUC6gyMPAfSh1CVqS1MSuI5BX+088YTdrUj
      dHoW9WWXpgljfTz+/p/RLks4t/v3weogft830LesLmGsUFQS9/0GOVNhKO/ivbM6AxOzzMxK
      YguWwkrb3hec5KGiAb7tOszvhP8aW6jz+vgMPUv2V99HmgZCnQ5iuVHfhbTr2WQSM3bnpp5U
      gtUo3gA9Kcfa7wBnEhW8U/ny6vW9mSTF2vyl8kKqiks7/rgg2cUnFp24q4XQLNelXpT5LCWH
      v4ft3b/nvcpnmHj8TxD+IOTSqGWL69OXvU9JFex6AqfQaY/Z6egtFOhaavIuZoNYsu8VXjdN
      LFXONL8f+2vu6fgBcrwPGRktsD+aDev+57AnRthva1vxs31ze47ayz/BTMZu6eJ0KyClRMYm
      UFSNMXvV2grBY2kL72R2wPkP4d5nkdNOT1MVzm8IKZFyOgRPkMgrRPLaDLMs9TzmaA9KoBzh
      cN+S8UopcXadhK6zjFdugnuewwgNYpn2Gv2M91EbtxMf6UIiyOpHKYQuLh1PvOJxr1hNOnt9
      sROel2d4PH2WdFzhv8e/i1G1kZqJU3zFe5age3FBeLHerBo8VtJH+4X/zFn3fpKbHlvdbn+b
      IKVEJqNU/Oo/8kBRmJ8H7l/bHaDUkeOb2q8wpaTx8j9T0X8IDB3z4qHlG9tdhPOFXcMw4Qfm
      c5zY+IczkT4iUI5a2XTrJn8yin7mfZLOYlKPfhfRug/FH8TStOOW9A+AUPA4JASrieg2BqM3
      9gGa1xSBQJn63LiNKUFfJJRzYbsCPy8pdhg4SYMQ2OwaJfbVZtyEuiLJo7VxdqWPISeGV93+
      dsAMDbLj+F/wUEWMvryHbMOetWeB6vw6v192nK8Gr/A1/XXcR/+ZluS55bdK1cKEUoRhwvmI
      n5C1YsUGl9XATMUxus5jtJ9Ba9mNUtFQcLC6yYzUyyGvOrFYNC569/PqBRuZvFhCK7RwAk/H
      ECgwRQRz/8z1XcqaKmHdxmIFWhZ17xDgHjyDMt7DpOm+KWlEIhGKZG9ZlOcH/hvm5MhN9HJr
      IewuTAktRXkaSiSmr3QdaoQJqPSaOCySIodJnRhmQ2D57VUoChOimIwueKvoJYzyG5cGXQ7S
      NApVK5MxjK4LGCPdyEwSmYyhVLei7Xh4xlJ5uyCEILf5YfTwGNrepxh1NfLKGY2cfv1qfb37
      yHQAzbRgOp2JbpogZjHtL5Q1Z33G5TJ/dnjHMBULEVct6fziO8zCNovBZZUE7OaM89m6IpfB
      LdIkdZVr+TKEqq6vISyaVRjztLLBvIA09GVX2bC1jMO5reSqGj6T3l9m05gj3ZiRcZSyekRJ
      JcJqR9hdqCvU598qCJsT5Z5HAIH14PO4T/4lmjo9Wa6fVPONZbPu07PRZNMepsrUkUJopU/N
      kTY1wFiRPLHbH6Jn8jCDoRyODYtHsy3EwuM5XXAl5uPKpBNK74BKP/ksQ1oV/8P/LZKbt6P1
      X1pfAriYrmCiYjeVkSOIyDCULK1RkckofWk3/a3f/uwCldWOUrsJtW7xQOm1xjQrJ4VCT9TK
      3x7Jc1+9wc4qE5a0c8yNzJUzZLCgZ6aJyKqY6HIqe/QKHPEURfKi+zjSNdvLjWSNTL4ga6ii
      EDdsSsHP4zu5WvowB1Pfo+02sZCrgSiro7fsf5txTzcc3rUmgOvN+8LUcVlNShLdhJYgAGno
      yFgIpeGeeXG7Nz2KO7T4nnD70Zp2clA/xLudTkyZ5t6a2RX7xl60ixHBXCIBh2JgmBJVWVyl
      upAoFkv1eR3hSDgdL+Ndz/OY4wN4EgOka3YgLQ7SrS1s6HydkahZkAGEQPGVLP8ibhPm1VXO
      ZRDZ9NoSwMKg75jwYtfjHE01EVa0pR20MqlCGVXH7fH5uVMgFJXo1md4p83Fzur3+XAogJka
      wSHyzF2H57RYrJcF3+c72I3EYVOjjRKXxG4pXNs5oRDNWdhYksVhWbnIa5qCtycb6deL2Gm8
      T4ejhXTRDvKmil6+CRkZZ1PqDFuaE7SN/xMnx1oY2vPdO0IlKqx2ZM2mtSOAtKFxfsTKtvIM
      AJGsxrWig+SkjbOWHeiN+xdtJ00TVBWlaPFqMF80CEUhtfERTp9OEtSPkBhO0OpYyqo6vZJf
      7/a88Ps021MrTcYu2WhTrRg+D2POCo4quxG7nuDKlX/hMccFSl2LC6wLV/+LIRul6gQPFnVw
      dtSJcFSRbH6iYESTEl/fp1Q5UuQNaCw2OHquDzM0iFpWd1Pv5pYjPrl2WqBsXlLhKbxYKeHt
      /D5ipVtQ9TTB3BBwPWsybbXD6libULk7BEIIjJJamvUhPEpBB7+4JXiha8L1wfbXsZwCSrUM
      NcTp1qs41vAyLmFAIkJHw4ucyq4srHEyJRgbz6CMDCGAjcUZwkoAaRjIyVFEMkK8bj//UPK/
      89+Ml/ir9lZSmhdH4s6wCQAIT9Ha7QAKBl57gQD6Eg46K7+ElBIjGSOUViEVA5dv5nqZCCNN
      s5CQ9TPkf/+8IuuvIi9VttkjCzif5dykF7JJC49NCYBSoSV6icYj/xdBI8q10Q9J5iQjukrv
      No1Kr0QT5pKJAIoc4E9HKc1FCSXrqPGbNAwcoWNyFFlcjWfgJNEH/wBsQcxAJUbdPeSSUXB6
      P5On6y2FEGu3A3jthXz0qbzgLfcL6E7/VF1XlfTmL81UbJTZNPLSYWQui/AUFaok/hpCWO0E
      7VOTb55ce/2EnHYOnHNk8T6ZtjQLbIpJrSXFBiZwKTrdhp+TjV+hxAI/1p/i1dguJnUbzLEg
      p3OCsbhgJCq42GdQmothVwz6R02ORasws1kesZxh8+iviFTvnYkJEEIUXNv9pYg7LE5gTaWR
      vCF4VT7NWMXewjqmKJRZkmye/CXvex4hFxoBRUVpvhfFuvrkSF8kyEwSj5lYMh/polocOaUH
      ErD4TjBLBAWNUiGDRE6qTFbvZk/PGxygneH0vfTU7EZkzpFTFHI6dE8qWAaGceXTgKRcMTGF
      4APZSnfwaarSHWwoy3LC+TCx8h0o7sAtexe3GnOVLWtGAIYJ7yc30dv48MwxER6mRQvxUGmU
      pskf87eDJeR3PDGTn/PXGdbYKDZxfcaH2ci42R9xOni98P/F+1tchVpgpwwE6dIGqrtfwVQV
      Gns/wm43CBQb/Ki3hrGcH18+zFfNthmCTJoa/9L4RyRbDyJsTsa6NLqDL2B61k/NuRJYwoM0
      t/0MVdPIo60dAUhnKedbfhc59QZlLkNl5/vEgi5ODgnesj+Bvr8e5TYUQfg8wpaJoYmlsz8s
      VBhcrz6+kRww1xg2JVxb7KRVJxYRo0zEMI1hvje8De/oZX6HD1GQ87ocFMUkm/cjbIV4znjD
      /at/yHWAEurjQPxT3JqOXTXXjgCsVhuKmmXGI0soTORtDMgmTpR+CeVOEo7uACSL68lIDQv5
      FcdHrjTdjFygNnUIk8eO/QXNjAGCUaWI4ZSfvaHD1BCa2VUkEDMsDBgerjrrMXqvoG3cs+pn
      W09k3GWMJRX6pJPdxcl1dIVQVXaV5giZvbQ7tq7bMO5UWDMxLFN+O0KKJYlglvURc76LRVih
      ue4Pct5xIWCrHJy6h2CvMgDjfdOnZ6BLhdcdBxnd9ARq7Ua0G9QFvlOhmDpNjjSdORdSynUs
      kSQlRTadzbbxO8NT8A5DtryZXq1y2RV9/sS/EeScz/zjU0WZpj6z18z18ryY9fNRuoL4lsfQ
      6rcUtHNrbZuRshCjzJR7zE1Em1WPniZtKEwn+l4XApB6DnX4GvX2JB9nG+8I0/gdB1XjQs2j
      DOrOwpRc4sdeeHxxWWApA9pin7mEUEDGVDidCzJSup1szTru1kIgHO5C9N9gB6STqw6DHZUe
      rIqJVSkoEdacAMzYBHSe4Vl5FJsmmCja+Gtl5V0phBAMbH6GS5aGgsC6QNc/97uYzkYtp7VD
      cGML8ULM6XeRa+2KiaoqjG587I5wJBSaBbV2I8LpxhxfIqPFEsiWNXEuV0ra4kHKNVSDSimR
      2RRNkXN8pewafgdcHjGhumithvC5g7DaGdj4JPqVK2gCpJzVCl2nBWJWTpjvVHg9IUz/vSx7
      Ned8jZzkznFimIVSWr26BpXNfFD+X7CHuulre3XtdoB0LMTBjn/kfvUqpmHwQYfB2xMV8Gtq
      6V0pYk0HOeK/D5iyqE59boyFLtELvy2zIywQFUwJvVo5Qt58Ut7bhdV6CghFKRTbFlBdE1i7
      HSCv65zqSRPbUMKn3IcocyL8a5cN+PMKoaqcbv06ox0BDkx8QpUML5/T87rTi1uFFzs6dycB
      SJsqv/I/yPju30K9QerHzxWSEQ6mj7OnLIPIZDLSZrv9OdnTqST/z/lJsqhgdxVcZnUdYb39
      9/4iQKYTKCNdPHHq/8UqDMqVJK5FawPMxULHucL3uXaAG5HShGnnnaZvM7LlyytaaaVp3DG+
      W2Y0hHB6EZb5hlV7uJdvpN6g0ZdDiDVMjutwulBdxjxDGJa7Vt+VQjjcyA3b6c5+mSfc7Rzp
      0CnLjuFMTGJHJyUtpJ1eivNRSmRqEUF4Tl/M1qZcChmp8tPNf0qy5f6V7dJSQj4HN1Hg7nZA
      eALXEaM0DfbGj9BUXHAxl1KsnyHsLutzc+gp3UtosotT23+P58OvUOeKk8hIvAqU+VQmYgYj
      Z9qokPEl+ygUui6kXwkZNiLCRVYK/DJFpZZGAP3ST6Ju18p/JyEQd8jkhyVkg3yWOjFWUBIg
      yOvK+tcHuIuVQUoJpkHWX83ZyEbqxz7luFHHzuLL+JzTK7qgxKcRqqulu2sAvaIS/1g/QTll
      PJLQaQQ4U3Y/NhWKY720JyxMPvK/IJwelNg4zokeNg8doijUhhobw7SvLEDmTsJc9bCUEjIp
      hMOFLT2JzyYZmDSYSAisVm3tZACAP78QI7UgO9NCU/5dLA4pJeh5hMWKGRnjwOgbtGeL2O4O
      80DRCNMxQ9NcfTxj4rErXOmKU9RzBQV4Q7mHgb3fRi9vKvSZzxYkZtUy7/2bw1388dF/z2ul
      zzF68OU1ftLPDpnPYo71QzpRKPIBePJRvq4cwWWm0BUXG8oK6W/W15lDSshnC1X77uKGKASV
      TMlMVjuGYXLA1c8Hgad5fyyIXKC69NgLP23rBjf9rkp6ck469313ZvJDIR2LWKServAWMyB9
      bJs8hUwn0Puv3ZLEw2sGoaCU1qDUtCBKa9gftPJssU4msJcuyy5i6Vk3inUlAAmgWe7aAlYJ
      xenleMtv86llN01DH/Bx5dfoDqsF/c5C1wiguqWcmK8URVsZxytcPo60vkTOKKymMh3HHB+4
      DU9yeyA0S4G4bU5KLZL7K52o6IjUKHY9QpnPyoW+GMmMvs47AIBpLsv+3IzT0xcdQrMSsldR
      r/dCMsIPLc/SF1HmObBNo8yvUtFaC56VW90nN36JQzv/COEJoEwMYMbDmNHQ5+y3kDzsyWBT
      QCaG2e4bZ29ZjDK/DU0RnOqMrC8BCAB1+dX/rnSwBErreL/2dyjv/YhceQs/cb7AREadxwpN
      Ly6jumvFNRlkKgaRUQynrxDKV7cVtawWvfdKIUfT5wSb7XmaHTq5XA70zHXn928sWWctkFhh
      0Yc7RECWpoGMhhDe4jvGg9UMVDCy7WsIRSVe0sqrfffxB7ZPUMRcM5cAZenxSkMv/BaKCp2n
      KRk5hylhZyDJcLdCu3sL+bJ6tIZtGP1XUYLVCLf/tmTnvlUQSA64C2Wa+jqvsK04w9ylVBGQ
      yRt31aCrg0C4A8jxAYzwKGrD9jtD9z2dMc80GbTXE80cmak8OY1WyygfpiLgmg1Wl1JS1f0e
      O2ijP2Xn/ObvQnkT494gUgre8xWjdJzgYOYE+f5xzti2kCmpLGiPElFEYIVFsdcB5mgvk31H
      SFuU/7+9Mwuu4zoT83dO9+2734uLfeUCgDspkdRGcWzJHlmWLVly7BnPUtE4mUxekprUVCXj
      p7zkLS95SVWqUpXFNSlXZSwvKsu2LI3kskaiHGm0kJIo7qQIEgCxg8Ddby/n5KGxkiAJgsDF
      BdgfCqwiCHafvn3+c/7zrxhuGSO+WNmJWgZlW9XAGWADIaREhCxk6zaM7gdo+fjnaPvmrXW9
      EFIi4ykuFNMopVFazfXDbUtpjo782p+8+JM/NHmVP45+wEP104wYrf4uEE8hm7qQmSa08lA7
      j3Bsx18yUL+floRACMmuyeM8Ov4aXed/hS5Mr+9D34rGLlyvzL4mmwNtN0/zVMykZAc7wIoR
      4Sgjj3yv9tSARIbfWH/J+WtvcZiz7M6U57oF/GGmn6b+/8k5sZUWd5i4fZ3xkMc/feEy2rN3
      sTHCtOZMpPELJxgOJXB7HsH8+FUGlUvMnEakG4hfO0nZ1mjHRj3wVXAdMIz1VxGlZMxsAJYW
      UNMQFCtOIAD3Qs1N/lmsKBe3PcuFylfoGXqHg+7n7K23MQw42JDlkPgcgA8u2RgRi5IW6Ewr
      uDZipirHQmHI7/gySImQEu/hb1ECPnUqc0Wu/DwFP0xbKw+VncBobK/Ko6rxQQhHfWFd1B5L
      U5ic5DxFeltjNxwjBSFD4Kp17hQfsLaIcIxLW5/hkvcUvxk+Q7d9iUGzk5gq8DX1HghJImKQ
      V2EeuvJTTKmpYPFJ/VcQC4oRL4qonK1FtKDCm1iQHC/CUaRWaNdZs7ZSi56xoR1dyqErxUUC
      YOQneay5THsmwoeXpmmpC5EveTPj9c0DrlrHYLiA6iCEADNEufMBTvMA4CsFL/U38HzqLaaK
      RXYmpjmQznK9qBkuxOjv/4CJzAsrC08Rwi9m7JR9J+daoxU4FcQNlegyU1+QThvYnuLg9iQf
      XszyUG+akCGZzSCFKpdGDKgd7K4D/KzSizk1RBMXuXzhJM/uT9LZaXJsqB208sPrlih9orX2
      J57WII2bq3qXC354i9ar1rXzVghpINJNN/18PN7FT979BwwpeGxnikzcRAJKKUKm309N602k
      Amml7ssq0veCCEfxWroZbulmsvkAY5U3kNIhb6aWDCfWnovITdB0+R0mSWLhYrfuQrX0oD3H
      PwCHY/7qGo6tb7JTsp5+J8nT29VcPeHT/XnyZY/9W5PUxU0+uZzbPAJwI4FA3B12uo1fnu3g
      6OivaGpuY6htp/8PWiGERGvNgZM/5KjzAV94bYxa7Ty/U9GXvcbxq+eZFCmc6xM0ySxnJi3k
      7kehtXv9Hsi08L76fU4PHONfdoyTLdhkEn7U6+9OXidm+bvAphGAhZNd3xgaGbAsstsf55gV
      Z9/Fl3AKJUKG9K0srd04qQb+wPuYqPSQMkxDJo5l5NhV77JbXPU/8xb/OkNZxf8pTVG4Vcur
      KiCEQKTq6d/9Lf7+1M/4atMk1/oLHNiSoClpcqg7RWkzOsK0mqlcoNSStfQDbkM4Tn77Ed7f
      +a/RlRLNAx8w/NCfEr/8Ht/o/yFNoRKJkEe4NM5j9dMzZ4T5CtWz360pyZGJN3i476e+WrSO
      CGnQ33CAcMgkX1a8e2aK3Iw1KBY21j8hZtWZmfS6XICQNWfXDrg7tOtApYiIpUgMnuDfTvxX
      QvhqZcGGwVIUx0pjJjO0ZCI0Z+Y/51zJo29omrY6g9cKe7jQ8oR/qI6l1uV9aKUITQ7wjP0u
      uxMFzvXnObIrjRCbSAWaY3bLrXLD682GMENg+i2ryqEUjpKEpAINUcNjZ6oElCgUR5mI7KWp
      bj6rTGm4OlJmd1uCg1MnOTL6OSFTctl4hL74o1yupG9z5zV4FilxG7fwQ/VYZAAAFFdJREFU
      auWfcW38bZrVWU4P2fTrhk0oADMEKZarhydMbE8SlRqtPKSUzDbwtkwPx/bVnLdPXifmTGMU
      pjhgFBmY2EXZVuxuC+F6kA+X2Rr+jMI/jTJ68I+q/yDhGMfbvwGxw4hIHB2Jb14BCFgddCnP
      41dfIm25oBfUIQVcBQXH4Lrrp0t2NobxLg2xJWEzWgoRsSSd9ZJ/PF2mQRa43niNptMfcihf
      4fXyNxGR2G3uvDYIISDjn9YFgSPsvkZ7nm89u9VuaZfYdfmXbLUvo00PKReXZfzt1QQdoSKK
      QT69aKAnh9gV82vuNEYczl3sx/Aq7DAcWiIOjA0gBJSF5K1zx7AffKYaj3lbqiYASik/v9R2
      EGukn2vPQywjwyxgpljxybdR7TuQjR1L+kwaJ07x3aaLlNLNXJysZ3Qky+H6HPGZbvKNls3u
      VAlJCS87hRGalyUpYE/0+pL3Pp2N0z7+NqPxFOXG7XjJpnV7b1UTgJHhYQoD/bhXTtO1vY2J
      SDtOfecij6PWGj01hkg3ootZRDx9V7p84PhaPkIIxLZ9KNflVj6TvbmPsBo1ZkTT3Woh8pov
      smG6UxVMqUlGNJ7ys1rNuzhy7U/neVDkOHHx7+gZKvOR2s6Jnu/hdOxZMvRiLamaACQjksZc
      Hw9uKfKl+k8oO8c50Rfl80oL45mdOPVdfs6qVqA8hJC4Zz9AxFIYHb3LiywMDr53R13LbR1B
      xytb2ZMbJpd38fKT7EzmceNwccpCI7gwabKjLX/Xt7WkL3AP100B8LQ+g/fpD7Gu1jMS304l
      lGBw65OI+Npbi6rXKd6K0Wlm6bb8zudxS3C4vkBH7jIdqSGOj0R4y3qUclMvQkq0EJhdOwl9
      9CvsZN2i8NyAtUdXijSNfkLe9DCyY3QnfUuPKaEt7nJ5yiRj2qt2v2fqB5FiEEon0UXo++QN
      Xt7xN5Qaun31SGs/vGWVVaWqOcJyuRz/+dhZnHQLnZMn+X7mMzzXYzQHPW2+NeD4kODV0h7K
      HnTZgxgohur3YHfsI/TFxzg9DwfmzSqhKyX+7LP/SJ2epjHqq0lCCIquoG8UdiRLGPf4KuZb
      tS5dp3rCi3BJtfLmgX8PdWuTf1w1hatSKeN6ChFPM9B+hF+f8cNt/dBUyBZdDrUqnjI/h44d
      9Lc/xpWer+N0HfB3hHgd3ufvosYG0M7qrTwBSyPCUV5tfRFhmoum5tVpky2x8j1P/rn7cOvK
      IA1GmUdDfTQPH1+dmy1B1QSgsbGJ2LY9AJgDZ7jmJvloKo3jaX5/Nst/6dvJj65tYWsaWgtX
      EY0daCHQyk/sdlt7EA1tOOc+wj33AWrgvO+uD1gzcp2H+HX8ublC6n5bUb0qk39Z5XBmuJeQ
      rjsVLVgXP4C3ZT8TW/bzu0qJ5MgpjJRAdRzkvJCI4WM8Jz/k1ZNXuRZqQ3b0+rXehcRo7/WT
      Hyol9GdvoewK5vb9MFsFWKuaadCwGRBC0N/1Va6efJ0t0QKg6EgpPh1OkpQOXbEyiZAm7xr0
      FSLsShYIrfKS2ufWM7blyIr//8LUzaWout1QV0q+3icEIhIj37ybXLwFYZgIKTnX9mX+t/Ec
      U+ltSCsC0kDnJv2OMoCMpxGZFuQffBfh2nNlPtT0GHhBkd3VRsSSvB8/il9qCmKmx0PtNrGE
      yalcgs+LdUzVd5HqaqboLW/xWe7q3+9l+Nmuv4V43cof4A5Ur0lebpKeK/9A0+Vji8zOjRNn
      OZp/f0GZdIls6sTeehDZ86BvClP6JhOnyk5i7HxoTsJlugmcypzKdCNaeYu6LAYsn4s9L/BF
      JY2cSYwxpWZbyuaBNo9oYx3bmk3a6wwGVZpR21qVKPSsY/Kr9hepNK1tUk3VBCBqKP60dYj6
      8siiYp/NTHMoNY3OTiyp7AkhkHVNiysPCIHRcKNZVKNKhRkfwhIrjPAzgG6FHh9E5Sbv8qnu
      D3Q0xdvpZ/wUYGEgkKDBEPMLStQS7N9Tj9XVyVnVTH/53irm/TzyDJNbV676LJeqqkDFiuZy
      ep+/os8Q1hUa4wbfzr2GzI2t/OJaw9SonwewBHdqLyoaO4Lcgdsw2voQl+35LpFSGpRck8SM
      iq3RSAmNScmBXSmmI/VzFp4bv5ZDsW5LVc5zVRWAeFjyvfhpMtc+8Wu5eA5JXcQ0JEfaPDqy
      51d+cSHRxSxq4MItf0UrDzV0GTU5Mv8z1/GLw1ahgsFGxk218FLvD3jVOcx0xUBrTdkz5vKF
      b1Q7rUiI88UEWWdlkzjq3r2H+W7Q2q9mV1UBEAL2Nyj+pukkz4+9Qqb/OI9l8nOrwmF5ZcWm
      TSEExp7HZsIpljgDuA7xc++gBi+gcpNzvgQx26AjcLDdEa+ujeOH/pr/0fkDPi+3MlkxSEak
      79CaEYJZQdjbadKzt5k+J3nX99EaRuNbVnv4i5jtuLMu0WPhkORoh+IHnWfJxOZXiG2RIjK7
      cjVImCGMjl50aYnVwzBxQ3Hk1j3ITAu6NNNFUevaLfBagwghqbTu5pVdf8tEwWR02j9zSSEX
      qTdaa6SAUCp+14fi83Y9XuuOVR750qxT+OR8IjUw4w4XNKcs/kq9ScvQ8bvrRLKwCEQ4ii5M
      zyfHz95RCCrbDyMa2hHxFGKmpLj2nCCEegXoVCOJeIR8bt4rP/vOPh9w+PRyiQuDRabGi3PZ
      Y8u6roYr0V50lequVlkABL4VeKFFxv+7QCKEoDsj+FepT7Cmri37qmGp6LR8j58Qwj/QLhEa
      7fsaDP9wNTPpdTEPZo0Wua1xCpEGDM9Fa+a8xSUHLF3hgVabXY0OddFb+WaWVjknVIwTvX9S
      tZivqnqCxQJ5EzfInl6wjCcjJkfH3+VdvoSX6bjjdStaMuxYmELhannnD08IhPAFQKaW3zcr
      YAFaE3HyxL0yJ69EsaenKRDGdEp0ti+wpoUtTpUzdMg8GWu206TgxhyEoivJuib/mH4SJ9NR
      tbZYNZMSKWY8jeALw9c7SmSvvM/x1AsI4865AO6MbTqgOujCFO1M0hpz+WRsikP1WSquRzgp
      6bse5YIdp7tRs7ddo5XJO6cSHMlkZ3IBZkrXoHGV5LTTyltNz1No2oHOtFY14rdmBEAv+FD8
      7Gv4zpYseui3HI88iKxSvfmA5aGVwhKK89MhdqfKKOVhzaSFbYuWKNtlzvclSGbCdGVg51aL
      sVGTjpmcYY0fQ/RS0/cZ7v2ar5aKuwmRWx1qLodQzJwTQGBIwVPJAQyntN7DCrgBYZdIGL5K
      EzfVTM39+ekbMTW7ojmms/4ZoFCB/pI138ZVw+vJZxjZ+YzfTWadzNA1IwDzE39hjLggZkks
      VTt9uAJ8UrlBTKEoORpX2ahFVjf//eUcg8mywdlhweREhZihFv4KRR1ed/9LzahAtyJiSRrV
      FIPrPZCAebSmK3uGKwWDHYmc33BC3Gx8SFmKL1kTjJRCmFLSnarMWIs0rhLkEuuv1tbMDnAj
      C61CXu0O875EA3WVUSquR9ScbzvkM7+TgyDvGORsSXeiwkKHzevWE0z1fKm6A1+CmplZCyf8
      7E9AY7uK0VDt9qO9L1EuGWcc11tcFRpu/IaLhSi2DDFWNtHaV45GnASf93yn6iVQlqJqI7id
      hdKf/EvH6l8YV3gNXWsypoAVIiQTXoy0tdjJNTvBF57nTAP2Ndl4YYsvilGuuxFe3v5vUJna
      qPJRNQGYKgv6ply09jh+NY+nvHmLwC3EI19R/NZ6vDrN1gKWj9a0hApM274zca5HwA1GTFfN
      n3Hb4i7aNPlF8jmudz5c1eHejqoJQKa+gded/RwbjfJetp6KN7vqK5YWAM3/m0wz0rhvxY4R
      XZhGB2mSq47MTdCiJ/H0DTkWN7ymrBNijDqKroGroC/Wy7W9L1R3sHegqlag8cbdvJ5tRU0d
      4+yIzaHOpWNwNBrH05yS3ffkFdSuQ8OJl5nc980g1n8VqR8/TUy6pG6zMQsE9ZaHEkn+W8M/
      J6wr5Fr2+uHqNURVTyE6nEBZcYxt+/hF4uuM5Rfr/b5C5O8KA9ddxjM77+l+Mt1IOdGC+8Fr
      aLtyT9cK8NHK4+DY75iyJXXhG3fXxTu5EHBY9iHCEXLbHoPo3ecGrDVVP4aLRB1q6wHsdDtn
      8lE0Co3CUwqt/YT2kq24WIyvSkhssftRdpujmFc/w5gYuGOdmIDbE+3/lP3yKuMlg/q54LZZ
      9KIvAKE1692KTmu1dI4I6+gIE2aIN9Nf48q1E/SKYa6WImRkER2O807oMKqjdXkFce+ENNi/
      LcW34p9yLfspP4n8MdyhVkzArdEaTKFmDrfiJkeu1oqcG8LVkkEvzcctX8du6a16jM9ChJBw
      CxV4XT3BXqKBM4mvcdp10MUcIhwFNEIrhHVvVQVmiY+eozfloJTgFe8gYg1rzNwPVFKtFK4Z
      yFuYrTXwv+RzlHZ9GZ1qAsOs6Xqu6++JADBM8ByEXfRTFAfuITl+Bq015tAF8tEmXpts50wh
      SWXLg6sw2Pub1uGPkGjqLXfR6q80XHdCFD0Du3M/1LcjzFBNTX7teTflnNdELJAQAqEVfzH9
      U0xTcszcysV7vWY5zwve77l4schIfBsXup70ow4D7gmvVOTEVJLdseyin+ddk//e9NfIWAKv
      ffc6je72+Kmvi9Nfa2MHAHSmlWE3TledwZS+N5Ol1pqt48c51Aa6tYfhPd/ESbas0kjvb6Ym
      shwvthI3F1uA4qZL0/k38awYbKBOPTUzUiEE7ycf50df1DHWuGfF19GeS/fgMf6ssY8P+2xO
      Nh6tqW14I6NLeXQiw6MNOfLu4pU074WY2vcNaNxYYSs1pRPkGnrJNazcYqArRZ4eeYUnO2w+
      HTP4ZeZ5dCS+rhaIzYR2baYvnKHcUOSqCNMedebOASNekkrrrg1XnbumBOBe0Mpj+9lXeHK/
      n3L3kdMFrW3B5F9NXAfp2WyLlag4vilUazihu3mz+8UN6W3fNAKA55KNNPHx4FVyMklfw6H1
      HtGmQmtN8tLv2ZbI0xJ1mC0jrIEPmp7GrdGD752omTPAvSJCYcZbH+TnzmF+2/YdiKXWe0ib
      jmzLPnrr4XrFIBPyvcBSwAujP6bx/JvrPLqVsWkEAK0RyXqM7gcDc+ca4Zx+n+MjJpNlg7rw
      vCOsSWQJ640Za7V5BECIudIat+OuSi4GzKM1Rn6SrliFuDFvAlUafhL/NgM7n13Hwa2czSMA
      y0HroI3SShECKxphsGDSk5wvUzPoJLnc+ZUNZ/2ZZdMIgDdy9c6RnkIgzEA9WinlcBpPGByf
      9K09edfgxz3/AZFZ7GTUSqHtCtpza37H3TSzwWjeWA6YjYYQAhIZcipCX6HCvnQRITSmneem
      rs1OGfXW/yXsFrG3H0bsW//qD7di0+wAM8Vp/I4vlaCS3FpgtPdQMSJMeWFOTKd4Y6wZb+iL
      m3/RDKN7H6HUvBPRWzv5v0uxaXaAOQzT/w5YdYzWbVTCCfKlHAO6gaRl0zj9BQPKW3QGEIaB
      2fsgWu2v+bPB5tkBZrhTM7yAlSNCFqGj3yanI1ydginHZLd3iY6Lbyyp69/r5I9LhXUXzTVW
      wqYTgIC1RbZuQzz1L8ibKYanHM5loxy6/DL17/0I79InK+7xthQlJda85L0ol8s6HK5Opv5/
      Opml6NW2VSBgeehyEe/cB6jBCxipeuQjz/pNyzfY7hsoywErQkRimA9+Bf3AE+j89Ew668Yj
      EICAe0IIiUhm1nsYKyY4AwTc1wQCEHBfEwhAwH1NIAAB9zWBAATc1wQCEHBfEwhAwNpS437P
      QAAC7msCAQhYcxpMhbnGQW0rJfAEB6wJBpqeiCIkNOOurFlVKBCAgNVF+388U+cQNzXDtuRU
      qXYVjUAAAlYNgeZI0mV7VPFhzuTitERrcVPzvFqidkUzYMNhAI+mXE4VDC6UDDS1PfmhygJQ
      o+eggFXARPNsvUPKhCfqXGJyY7zsqibETE6MMm5r+ioGZ4uSa7ZE1foSEbAstlge32+pzKWj
      fpwz+M11a51HdWeqegYISU1bWNMWdnk8BdOu4FTBYNgWxA04njdwA4HYUOyOevSXJX/ebOO6
      DqGQhdYw6WyM97iuh+C0qTmanm+1uSPq8fdjVrArbCDGbMHBuItQDobhJ8GfKUrez4VqXv+H
      GjsEd0cVX065yFo1GgfcxIQnOVkwUVogZ6pAlFXtH35nqTkz6BN1Ljti/rY6ZksyIU2bpXjt
      eogJt6bkNWCGlKUJGfPvZktYIbRGb4AE+ZoTAIA2S9NmecB8Idu/sCq8Mm4xZEvKuvY/2M2M
      geaPGm3eyxr02yZxoZELGuM1Wpp6UzPh1f57qkkBWIqkAS+22NgKLpYMfjERwtso++wmwwDq
      Tc1jSY9IXvBEenEtoMGKYHIDTH6osTPAcrAk7I17PJJ07/zLAavKnrAHWtMTVTRZmlZLYwlN
      a3jxmS0uIbQx5v/GE4BZvpRyeLG5wv6Yi1S6ZoOtNhNnKgamgDbL7w6TCWm+27x49ddakzYV
      u6I12odBa4TWNJuKdlNtHBXoRiIStkcUDabHNzICDfRVJL8YtwLVaA1IG4rdUUXM0BxM3Hr3
      nXWEhWtwaU0bim83OCQM/4wixAY6A9yMBgQpc36y740pRIPNyxOBL2G1KSvBx3mD+B0EAEAp
      D6FDVRrZ8tgT8fhuk428YVrUoJzeG3viir9qKdNl1egWvA5YQtMSUsh76NZS0YL2kOLftVdI
      3KHos5RGbS0/2lfbbpz8sIF3ACFull2tNVoriqUK407tx6GsKVrzaNKjM6TYGvVImJB14e+G
      w0yrla17Q67kx6MWT2Ucmq3bC1PGVLf992qQMDTdYY+mkOax1NK7luk4q1fO+k54au27NHqu
      ImUZNJkaxP27C5jAU3XzzYtcBTEJe6Meg87y30FUaNrDiisViasFtoayB666/TUOJlzOFg3W
      y2UjNTxd79AY8gVRa3CXGPL/B0C2A7HSMlO7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
